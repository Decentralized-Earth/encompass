#!/bin/bash
set -xeo pipefail
export VERSION="$1"
export BUILDTYPE="${2:-tagged}"


die () {
case $1 in
 1) echo "Build Error:" 
   echo "Build Version: ${VERSION} and git Version: ${gitver} don't match"
   echo "Bump version or build from master with  ./build ${VERSION} master"
   exit 1
   ;;
 2) echo "git checkout failed" 
    echo "Didnt find TAG for ${VERSION}"
    exit 2
    ;;
 3) echo "setup.py not found in /root/repo"
    echo "maybe your source dir was empty?"
    exit 3
    ;;
 *) echo "ERROR: die called exit $1"
    exit "$1"
    ;;
esac
}
check_ver () {
 export gitver=$(grep "ELECTRUM_VERSION" lib/version.py |awk '{print $3}' |cut  -d"\"" -f2)
 if [ "${VERSION}" != "${gitver}" ]
 then
   sed -i 's/ELECTRUM_VERSION\ \=\ \"'${gitver}'\"/ELECTRUM_VERSION\ \=\ \"'${VERSION}'\"/g' lib/version.py
 fi
}

install_pip () {
## install dependencies to build environment
pip install  --upgrade  --no-compile -t packages -r /root/requirements.txt
pip install  --upgrade -r /root/requirements.txt

}

cd /root
### make release tarballs/zips
if [ "${BUILDTYPE}" = "master" ]
then
 echo "building from MASTER" 
 git clone https://github.com/mazaclub/encompass repo
 cd /root/repo
 check_ver
elif [ "${BUILDTYPE}" = "local" ] 
then
  cd /root/repo
  test -f /root/repo/setup.py || die 3
  echo "Building from local sources as Version ${VERSION}"
  check_ver
elif [ "${BUILDTYPE}" = "rc" ]
then 
   git clone https://github.com/mazaclub/encompass repo
   cd /root/repo
   git checkout release/v${VERSION} || die 2

else "Building from Tagged Version: ${VERSION}"
  git clone https://github.com/mazaclub/encompass repo
  cd /root/repo
  git checkout v"${VERSION}" || die 2
fi
cp -v  /root/make_packages /root/repo/make_packages
cp -v  /root/make_android /root/repo/make_android
cp -v  /root/make_windows /root/repo/make_windows
test -d /root/release-packages || mkdir /root/release-packages
mkdir ./packages
install_pip
pyrcc4 icons.qrc -o gui/qt/icons_rc.py
python setup.py install

echo "Making Source"
#cp -av /root/ltc_scrypt.so lib/
#cp -av /root/darkcoin_hash.so lib/
cp -av /root/packages ./
./make_packages
test -d /root/release-packages/Source || mkdir -pv /root/release-packages/Source
cp -av dist/* /root/release-packages/Source
rm -rf  dist/*
echo "Source Complete...."

#echo "Making Android" 
#cp -av /root/packages ./
#cp -av /root/ltc_scrypt.so lib/
#cp -av /root/darkcoin_hash.so lib/

#./make_android
#test -d /root/release-packages/Android || mkdir -pv /root/release-packages/Android
#cp -av dist/* /root/release-packages/Android
#rm -rf dist/*
#echo "Android complete...."

echo "Making Windows"
cp -av /root/packages ./
cp -av /root/trezorctl.py ./packages/
./make_windows
test -d /root/release-packages/Windows || mkdir -pv /root/release-packages/Windows
rm -rf /opt/wine-electrum/drive_c/encompass/Encompass-"$VERSION".*
rm -rf /opt/wine-electrum/drive_c/encompass/Encompass-"$VERSION"/
rm -rf /opt/wine-electrum/drive_c/encompass/Encompass-"$VERSION"*
cp -v /root/repo/dist/Encompass-"$VERSION".zip /opt/wine-electrum/drive_c/encompass/Encompass-"$VERSION".zip
cp -av dist/* /root/release-packages/Windows
## FIXME put buildbinary here
#mv /opt/wine-electrum/drive_c/encompass/Encompass-${VERSION}/dist/encompass-setup.exe /root/release-packages/Windows/Encompass-${VERSION}-Windows-setup.exe
#mv /opt/wine-electrum/drive_c/encompass/Encompass-${VERSION}/dist/encompass.exe /root/release-packages/Windows/Encompass-${VERSION}-Windows.exe
## rm just isn't that expensive to run without fancy bash expansions
cd /opt/wine-electrum/drive_c/encompass
unzip Encompass-"$VERSION".zip
cp -av /root/darkcoin_hash.pyd /opt/wine-electrum/drive_c/encompass/Encompass-"$VERSION"/lib
cp -av /root/ltc_scrypt.pyd /opt/wine-electrum/drive_c/encompass/Encompass-"$VERSION"/lib
cp -av /root/hid.pyd /opt/wine-electrum/drive_c/encompass/Encompass-"${VERSION}"/lib
cp -av /root/hid.pyd /opt/wine-electrum/drive_c/encompass/Encompass-"${VERSION}"
echo "Windows Complete"


echo "$0 for ${VERSION}:${BUILDTYPE} completed"
